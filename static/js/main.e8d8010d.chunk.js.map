{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","description","photo","year","id","className","alt","src","CardList","jordans","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterJordans","filter","jordan","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAeeA,EAbF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAsB,EAAfC,KAAe,EAATC,GAE5C,OACI,sBAAKC,UAAU,+DAAf,UACI,qBAAKC,IAAI,GAAGC,IAAKL,IACjB,gCACI,6BAAKF,IACL,4BAAIC,WCgBLO,EAtBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEhB,OACA,8BAEIA,EAAQC,KAAI,SAACC,EAAMC,GACnB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAQG,GAAGR,GACfJ,KAAMS,EAAQG,GAAGZ,KACjBC,YAAaQ,EAAQG,GAAGX,YACxBE,KAAMM,EAAQG,GAAGT,KACjBD,MAAOO,EAAQG,GAAGV,OALbU,SCIEC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,SAAf,SACA,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCCHI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,mBAAoBC,OAAQ,SAArE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAhBCQ,aC6CZC,G,wDAvCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAd1C,EAAKX,MAAQ,CACTlB,QAAS,GACTK,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,QAASkC,S,oBAO5C,WAAU,IAAD,EAC4BZ,KAAKJ,MAA9BlB,EADH,EACGA,QAASK,EADZ,EACYA,YACX8B,EAAgBnC,EAAQoC,QAAO,SAAAC,GACjC,OAAOA,EAAO9C,KAAK+C,cAAcC,SAASlC,EAAYiC,kBAE1D,OAAQtC,EAAQwC,OAGZ,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,QAASmC,WAP1B,6C,GAzBKX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e8d8010d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, description, photo, year, id }) => {\n   \n    return (\n        <div className='bg-light-green dib br3 pa3 mh3 mv3 grow bw2 shadow-5 tc w-25'>\n            <img alt='' src={photo} />\n            <div>\n                <h2>{name}</h2>\n                <p>{description}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n\n//imported in CardList","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ jordans }) => {\n    \n    return (\n    <div>\n        {\n        jordans.map((user, i) => {\n        return  (\n        <Card \n        key={i} \n        id={jordans[i].id} \n        name={jordans[i].name} \n        description={jordans[i].description} \n        year={jordans[i].year} \n        photo={jordans[i].photo}\n        />\n        );\n    })\n}\n    </div>\n    );\n}\n\nexport default CardList;\n\n//imported in App.js\n//renders everything in list.\n//CardList accepts jordans now as props. in App.js they are state. App.jss owns it now so it is allowed to change it.","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n        <div className='tc pa2'> \n        <input \n        className='pa3 ba b--green bg-lightest-blue'\n        type='search' \n        placeholder='search jordans' \n        onChange={searchChange}\n        />\n        </div>\n    );\n}\n\nexport default SearchBox;\n\n//to add more things its a good idea to wrap in a div\n//have searchchange as a function","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: 'scroll', border: '5px, solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Ooooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n        super() //super calls the constructor of the component\n        this.state = {\n            jordans: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ jordans: users }));\n        \n    }\n\n    onSearchChange = (event) => { //anytime you use this. use arrow functions\n        this.setState({ searchfield: event.target.value }) //onsearchchange is a function to help with the communication.\n    }\n    render() {\n        const { jordans, searchfield } = this.state;\n        const filterJordans = jordans.filter(jordan => {\n            return jordan.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !jordans.length ?\n             <h1>Loading</h1> :\n          (\n            <div className='tc'>\n                <h1 className='f1'>Air Jordans</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                    <CardList jordans={filterJordans}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        )\n        }\n    }\n\nexport default App;\n\n//parent file\n//being imported in index.js\n//if its an object say this.\n//state lives in parent component\n//now we can access jordans from state\n// jordans: jordans and searchfield: '' help searchbox and cardlist communicate with eachother.","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//imported collection on this file so able to use info as objects from collection into the Card element because it is rendered in this file.\n"],"sourceRoot":""}